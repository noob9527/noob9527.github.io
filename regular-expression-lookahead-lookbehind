<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"/>





<title>正则表达式：零宽断言(lookaround) - 许炎的个人博客</title>


    <meta name="keywords" content="编程技巧">


<meta name="description" content="零宽断言(lookaround&#x2F;zero-width assersion)是正则表达式中非常常用的特性，但是因为其一些带误导性的中文翻译和易于混淆的写法，让我一度每次使用都要先查文档。  一.写在前面这篇文章讲的东西非常基础，之所以要写一遍完全是因为我智商经常离线，老把它们写混。如果你对下面五种模式及其用途了然于心，请不要浪费时间读这篇文章。  (?:pattern)非捕获匹配(matches">
<meta property="og:type" content="article">
<meta property="og:title" content="正则表达式：零宽断言(lookaround)">
<meta property="og:url" content="https://blog.staynoob.cn/regular-expression-lookahead-lookbehind">
<meta property="og:site_name" content="NOOB">
<meta property="og:description" content="零宽断言(lookaround&#x2F;zero-width assersion)是正则表达式中非常常用的特性，但是因为其一些带误导性的中文翻译和易于混淆的写法，让我一度每次使用都要先查文档。  一.写在前面这篇文章讲的东西非常基础，之所以要写一遍完全是因为我智商经常离线，老把它们写混。如果你对下面五种模式及其用途了然于心，请不要浪费时间读这篇文章。  (?:pattern)非捕获匹配(matches">
<meta property="og:locale">
<meta property="og:image" content="https://blog.staynoob.cn/img/regular-expression-lookaround.jpg">
<meta property="article:published_time" content="2017-01-03T15:16:58.000Z">
<meta property="article:modified_time" content="2024-06-29T11:52:49.161Z">
<meta property="article:author" content="noob9527">
<meta property="article:tag" content="编程技巧">
<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="https://blog.staynoob.cn/img/regular-expression-lookaround.jpg">


    <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico " />
    <link rel="Bookmark" type="image/x-icon" href="/favicon.ico " />
    <link rel="icon" type="image/x-icon" href="/favicon.ico " />



<meta name="google-site-verification" content="9GCG5tynfuvxF_9_xHvo8tvc7CqHeqKMZQqda25rDPs" />


<meta name="baidu-site-verification" content="IVBrfkvovZ" />



<link rel="alternative" href="/atom.xml" title="NOOB" type="application/atom+xml">



<script src="/vendors/jquery/jquery.js"></script>
<script src="/vendors/bootstrap/js/bootstrap.js"></script>
<script src="/js/script.js"></script>


<link rel="stylesheet" href="/vendors/font-awesome/css/font-awesome.min.css">


<link rel="stylesheet" href="/css/style.css">


<script type="text/javascript" id="hexo.configuration">
  var CONFIG = {
    search: {
      path: '/search.xml'
    }  
  };
</script>
<meta name="generator" content="Hexo 6.3.0"></head>
<body>
    <header id="site-nav">
    <div id="banner"></div>
    <nav class="navbar navbar-inverse">
        <div class="container-fluid">
            
             <!-- social link-->
            <div class="social-link">
                <ul class="nav navbar-nav navbar-left">
                    
                        
                            <li><a href="https://github.com/noob9527" target="_blank">
                                <i class="fa fa-2x fa-github"></i>
                            </a></li>
                        
                            <li><a href="http://weibo.com/p/1005052678297054" target="_blank">
                                <i class="fa fa-2x fa-weibo"></i>
                            </a></li>
                        
                    
                    
                        <li><a href="/atom.xml" rel="alternate">
                            <i class="fa fa-2x fa-rss"></i>
                        </a></li>
                    
                </ul>
            </div>
            
            <div class="navbar-header">
                <!--toggle button-->
                <button class="navbar-toggle collapsed" data-toggle="collapse" 
                        data-target="#navbar-link" aria-expanded="false">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>

                <!--brand-->
                <a href="/" class="navbar-brand">
                    <span>NOOB</span>
                </a>
            </div>
            
            <!--link-->
            <div class="collapse navbar-collapse" id="navbar-link">
                <ul class="nav navbar-nav navbar-right">
                    
                        <li>
                            <a href="/" rel="section">
                                
                                    <i class="fa fa-home fa-fw"></i>
                                
                                首页
                            </a>
                        </li>
                    
                        <li>
                            <a href="/archives" rel="section">
                                
                                    <i class="fa fa-archive fa-fw"></i>
                                
                                归档
                            </a>
                        </li>
                    
                        <li>
                            <a href="/about" rel="section">
                                
                                    <i class="fa fa-user fa-fw"></i>
                                
                                关于
                            </a>
                        </li>
                    
                </ul>
            </div>
        </div>
    </nav>
</header>

    
    <div class="site-content container-fluid">
        <div class="row">
            <div class="col-md-9">
                <main>
                    <article id="post-正则表达式-零宽断言-lookaround"
         class="post post-type-post" itemscope itemprop="blogPost">

    <div class="post-inner">
        <!-- title -->
        
        <header class="post-header">
            <h1 itemprop="name">
    
      正则表达式：零宽断言(lookaround)
    
</h1>
        </header>
        

        <!-- meta data -->
        <div class="post-meta">
            <span class="post-date">
    <span class="post-meta-item-icon">
      <i class="fa fa-calendar"></i>
    </span>
    <span class="post-meta-item-text">发表于</span>
    <time itemprop="datePublished" datetime="2017-01-03T23:16:58+08:00" 
          content="2017-01-03">
        2017-01-03
    </time>
</span>
            
<span class="post-category">
    &nbsp; | &nbsp;
    <span class="post-meta-item-icon">
        <i class="fa fa-folder-o"></i>
    </span>
    <span class="post-meta-item-text">分类于</span>
    <span itemprop="about" itemscope itemtype="https://schema.org/Thing">
        <a class="article-category-link" href="/categories/%E6%B0%B8%E8%BF%9C%E8%AE%B0%E4%B8%8D%E4%BD%8F%E7%9A%84%E7%BC%96%E7%A8%8B%E5%A7%BF%E5%8A%BF/">永远记不住的编程姿势</a>
    </span>
</span>


            
    

        </div>

        <!-- gallery-->
        
        <div class="post-gallery">
              <div class="post-gallery-photos">
    
        
          <!--<a class="post-gallery-img fancybox" href="/img/regular-expression-lookaround.jpg" rel="gallery_cly05clio000yiwey7i7c6wsi">-->
            <img src="/img/regular-expression-lookaround.jpg" itemprop="image">
          <!--</a>-->
        
    
  </div>

        </div>
        

        <!-- entry -->
        <div class="post-entry" itemprop="postBody">
            
            <!--文章内容-->
            <div class="post-content"><blockquote>
<p>零宽断言(lookaround/zero-width assersion)是正则表达式中非常常用的特性，但是因为其一些带误导性的中文翻译和易于混淆的写法，让我一度每次使用都要先查文档。</p>
</blockquote>
<h3 id="一-写在前面"><a href="#一-写在前面" class="headerlink" title="一.写在前面"></a>一.写在前面</h3><p>这篇文章讲的东西非常基础，之所以要写一遍完全是因为我智商经常离线，老把它们写混。如果你对下面五种模式及其用途了然于心，请不要浪费时间读这篇文章。</p>
<ul>
<li><code>(?:pattern)</code>非捕获匹配(matches pattern but does not capture the match)</li>
<li><code>(?=pattern)</code>零宽正向先行断言(lookahead)</li>
<li><code>(?!pattern)</code>零宽负向先行断言(negative lookahead)</li>
<li><code>(?&lt;=pattern)</code>零宽正回顾后发断言(lookbehind)</li>
<li><code>(?&lt;!pattern)</code>零宽负回顾后发断言(negative lookbehind)</li>
</ul>
<p>之所以我要在每种模式后打出它的英文表达方式，不是为了装B，而是想让大家感受一下这个翻译(msdn,javascript权威指南等多本书籍或文档采用这样，或者类似这样的翻译)。我反正是第一次体会到英文看的明明白白，中文看得一头雾水的感觉。</p>
<span id="more"></span>
<h3 id="二-功能介绍"><a href="#二-功能介绍" class="headerlink" title="二.功能介绍"></a>二.功能介绍</h3><p>相比理解这些模式的中文名，理解它们的用法要简单得多。（更多详情可以参见文章最后的测试用例）</p>
<ul>
<li><code>(?:a)(b)\\1</code>匹配abb，如果是<code>(a)(b)\\1</code>则匹配aba，<code>(?:pattern)</code>表示匹配但不捕获，可以将其理解成不创建分组的<code>(pattern)</code>。</li>
<li><code>a(?=b)</code>断言a后面有b，匹配ab但不匹配aa，最终捕获a。（个人认为应该翻译成<em>正向肯定查找</em>）</li>
<li><code>a(?!b)</code>断言a后面没有b，匹配aa但不匹配ab，最终捕获a。（个人认为应该翻译成<em>正向否定查找</em>）</li>
<li><code>(?&lt;=a)b</code>断言b前面有a，匹配ab但不匹配bb，最终捕获b。（个人认为应该翻译成<em>反向肯定查找</em>）</li>
<li><code>(?&lt;!a)b</code>断言b前面没有a，匹配bb但不匹配ab，最终捕获b。（个人认为应该翻译成<em>反向否定查找</em>）</li>
</ul>
<h3 id="三-Polyfill"><a href="#三-Polyfill" class="headerlink" title="三.Polyfill"></a>三.Polyfill</h3><p>lookbehind目前还处在es7的<a target="_blank" rel="noopener" href="https://github.com/goyakin/es-regexp-lookbehind">提案</a>阶段，因此无法在js中直接使用（也正因为如此，VSC的查找与替换不支持lookbehind），新版的V8引擎已经实现了该功能。不过需要在浏览器设置中打开“#enable-javascript-harmony”开关（在chrome地址栏输入<em>about:flags</em>设置）<br>在js实现该功能之前，可以使用捕获与引用来达成类似的效果，举例来说如果你需要将所有前面带有static修饰符的int，替换成long，在支持lookbehind的编辑器中可以直接查找<code>(?&lt;=static\s)int</code>，并将其替换成<code>long</code>。而在不支持lookbehind的环境下（vscode别瞅了，说的就是你！），可以查找<code>(static\s)int</code>，将其替换成<code>$1long</code>。</p>
<h3 id="四-Code-Demo"><a href="#四-Code-Demo" class="headerlink" title="四.Code Demo"></a>四.Code Demo</h3><p>Polyfill Demo(js)<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试依赖mocha,shouldjs</span></span><br><span class="line"><span class="title function_">describe</span>(<span class="string">&#x27;polyfill&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="title function_">it</span>(<span class="string">&#x27;使用捕获与引用来替代lookbehind&#x27;</span>, <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="string">&#x27;static int&#x27;</span>.<span class="title function_">replace</span>(<span class="regexp">/(static\s)int/</span>, <span class="string">&#x27;$1long&#x27;</span>)</span><br><span class="line">            .<span class="property">should</span>.<span class="title function_">equal</span>(<span class="string">&#x27;static long&#x27;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>Feature Demo(java)<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试依赖junit4,assertj</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">matchButNotCapture</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">exp</span> <span class="operator">=</span> <span class="string">&quot;(?:a)(b)\\1&quot;</span>;</span><br><span class="line">    <span class="comment">//由于(?:)不创建引用，因此\1引用了(b)捕获的字符串</span></span><br><span class="line">    Assertions.assertThat(Pattern.matches(exp, <span class="string">&quot;aba&quot;</span>)).isFalse();</span><br><span class="line">    Assertions.assertThat(Pattern.matches(exp, <span class="string">&quot;abb&quot;</span>)).isTrue();</span><br><span class="line">    <span class="comment">//只有一个分组</span></span><br><span class="line">    Assertions.assertThat(Pattern.compile(exp).matcher(<span class="string">&quot;abb&quot;</span>).groupCount()).isEqualTo(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lookahead</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="comment">//匹配后面有b的a</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">exp</span> <span class="operator">=</span> <span class="string">&quot;a(?=b)&quot;</span>;</span><br><span class="line">    Assertions.assertThat(Pattern.compile(exp).matcher(<span class="string">&quot;aa&quot;</span>).find()).isFalse();</span><br><span class="line">    <span class="comment">//zero-width</span></span><br><span class="line">    <span class="type">Matcher</span> <span class="variable">matcher</span> <span class="operator">=</span> Pattern.compile(exp).matcher(<span class="string">&quot;ab&quot;</span>);</span><br><span class="line">    Assertions.assertThat(matcher.find()).isTrue();</span><br><span class="line">    Assertions.assertThat(matcher.group()).isEqualTo(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">negativeLookahead</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="comment">//匹配后面没有b的a</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">exp</span> <span class="operator">=</span> <span class="string">&quot;a(?!b)&quot;</span>;</span><br><span class="line">    Assertions.assertThat(Pattern.compile(exp).matcher(<span class="string">&quot;ab&quot;</span>).find()).isFalse();</span><br><span class="line">    <span class="comment">//zero-width</span></span><br><span class="line">    <span class="type">Matcher</span> <span class="variable">matcher</span> <span class="operator">=</span> Pattern.compile(exp).matcher(<span class="string">&quot;aa&quot;</span>);</span><br><span class="line">    Assertions.assertThat(matcher.find()).isTrue();</span><br><span class="line">    Assertions.assertThat(matcher.group()).isEqualTo(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">lookbehind</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="comment">//匹配前面有a的b</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">exp</span> <span class="operator">=</span> <span class="string">&quot;(?&lt;=a)b&quot;</span>;</span><br><span class="line">    Assertions.assertThat(Pattern.compile(exp).matcher(<span class="string">&quot;bb&quot;</span>).find()).isFalse();</span><br><span class="line">    <span class="comment">//zero-width</span></span><br><span class="line">    <span class="type">Matcher</span> <span class="variable">matcher</span> <span class="operator">=</span> Pattern.compile(exp).matcher(<span class="string">&quot;ab&quot;</span>);</span><br><span class="line">    Assertions.assertThat(matcher.find()).isTrue();</span><br><span class="line">    Assertions.assertThat(matcher.group()).isEqualTo(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">negativeLookbehind</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="comment">//匹配前面没有a的b</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">exp</span> <span class="operator">=</span> <span class="string">&quot;(?&lt;!a)b&quot;</span>;</span><br><span class="line">    Assertions.assertThat(Pattern.compile(exp).matcher(<span class="string">&quot;ab&quot;</span>).find()).isFalse();</span><br><span class="line">    <span class="comment">//zero-width</span></span><br><span class="line">    <span class="type">Matcher</span> <span class="variable">matcher</span> <span class="operator">=</span> Pattern.compile(exp).matcher(<span class="string">&quot;bb&quot;</span>);</span><br><span class="line">    Assertions.assertThat(matcher.find()).isTrue();</span><br><span class="line">    Assertions.assertThat(matcher.group()).isEqualTo(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
</div>
            
        </div>

        <footer class="post-footer">
            
  <ul class="post-tag-list" itemprop="keywords"><li class="post-tag-list-item"><a class="post-tag-list-link" href="/tags/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/" rel="tag">编程技巧</a></li></ul>

        </footer>
    </div>
    
    
    <div class="post-nav">
  <div class="post-nav-next post-nav-item">
    
    <a href="/jackson-serialize-bi-directional-relationship-infinite-recursion" rel="next" title="Jackson序列化双向关联映射的四种方法">
        <i class="fa fa-chevron-left"></i>
        Jackson序列化双向关联映射的四种方法
    </a>
    
  </div>

  <div class="post-nav-prev post-nav-item">
    
    <a href="/bash-shortcuts" rel="prev" title="Bash小技巧">
        Bash小技巧 
        <i class="fa fa-chevron-right"></i>
    </a>
    
  </div>
</div>

    

    
        <div class="comments" id="comments">
    
        <div id="disqus_thread">
            <noscript>
                Please enable JavaScript to view the
                <a target="_blank" rel="noopener" href="//disqus.com/?ref_noscript">comments powered by Disqus.</a>
            </noscript>
        </div>
    
</div>
    
</article>

                </main>
            </div>
            <div class="col-md-3">
                <aside class="side-nav">
    
    <aside class="widget" id="site-profile">
    <img src="/img/logo_brown.png">
    <h3 class="widget-title">staynoob! not stay noob!</h3>
    <div class="widget-content">
        
            
                <a href="https://github.com/noob9527" target="_blank">
                    <i class="fa fa-2x fa-github"></i>
                </a>
            
                <a href="http://weibo.com/p/1005052678297054" target="_blank">
                    <i class="fa fa-2x fa-weibo"></i>
                </a>
            
        
        
            <a href="/atom.xml" rel="alternate">
                <i class="fa fa-2x fa-rss"></i>
            </a>
        
    </div>
</aside>
    
    

<aside class="widget" id="post-toc">
    <h3 class="widget-title">文章目录</h3>
    <div class="widget-content">
        <ol class="document-nav"><li class="document-nav-item document-nav-level-3"><a class="document-nav-link" href="#%E4%B8%80-%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2"><span class="document-nav-text">一.写在前面</span></a></li><li class="document-nav-item document-nav-level-3"><a class="document-nav-link" href="#%E4%BA%8C-%E5%8A%9F%E8%83%BD%E4%BB%8B%E7%BB%8D"><span class="document-nav-text">二.功能介绍</span></a></li><li class="document-nav-item document-nav-level-3"><a class="document-nav-link" href="#%E4%B8%89-Polyfill"><span class="document-nav-text">三.Polyfill</span></a></li><li class="document-nav-item document-nav-level-3"><a class="document-nav-link" href="#%E5%9B%9B-Code-Demo"><span class="document-nav-text">四.Code Demo</span></a></li></ol>
    </div>
</aside>

    
    
<aside class="widget" id="local-search">
    <h3 class="widget-title">站内搜索</h3>
    <div class="widget-content">
        <label for="local-search-input" class="sr-only">search</label>
        <input type="search" placeholder="search"
                id="local-search-input" class="form-control">
        <div id="local-search-result"></div>
    </div>
</aside>

    
    
<aside class="widget">
    <h3 class="widget-title">最新文章</h3>
    <div class="widget-content">
        <ul class="recent-posts">
            
            <li>
                <a href="/notes-on-high-performance-mysql">Notes on High Performance MySQL</a>
            </li>
            
            <li>
                <a href="/exploration-vs-exploitation">Exploration vs Exploitation</a>
            </li>
            
            <li>
                <a href="/post/2019/10/why-i-think-kotlin-is-preferable-to-java/">Why I think Kotlin is preferable to Java</a>
            </li>
            
            <li>
                <a href="/post/2019/05/when-soft-delete-meets-unique-index/">When &quot;Soft Delete&quot; Meets &quot;Unique Index&quot;</a>
            </li>
            
            <li>
                <a href="/post/2019/05/the-good-old-transaction/">The Good Old Transaction</a>
            </li>
            
            <li>
                <a href="/post/2019/03/is-distributed-lock-safe/">分布式锁真的“安全”吗？</a>
            </li>
            
            <li>
                <a href="/post/2019/03/strong-consistency-model/">(译)Strong Consistency Models</a>
            </li>
            
            <li>
                <a href="/post/2019/02/common-pitfalls-in-jpa-hibernate/">Common Pitfalls in JPA(Hibernate)</a>
            </li>
            
            <li>
                <a href="/post/2019/02/common-pitfalls-of-declarative-transaction-management-in-spring/">Common Pitfalls of Declarative Transaction Management in Spring</a>
            </li>
            
            <li>
                <a href="/post/2019/01/understanding-zombie-process/">Understanding Zombie Process</a>
            </li>
            
            <li>
                <a href="/closure-in-javascript">再谈js闭包</a>
            </li>
            
            <li>
                <a href="/btree-data-structure">B-tree数据结构</a>
            </li>
            
            <li>
                <a href="/lambda-calculus-y-combinator">lambda calculus:Y-combinator</a>
            </li>
            
            <li>
                <a href="/lambda-calculus-introduction">lambda calculus:Introduction</a>
            </li>
            
            <li>
                <a href="/salted-password-hashing">加密算法简介</a>
            </li>
            
        </ul>
    </div>
</aside>

    
    
<aside class="widget">
    <h3 class="widget-title">分类</h3>
    <div class="widget-content">
        <ul class="category-list"><li class="category-list-item"><a class="category-list-link" href="/categories/Algorithm/">Algorithm</a><span class="category-list-count">6</span></li><li class="category-list-item"><a class="category-list-link" href="/categories/Backend/">Backend</a><span class="category-list-count">8</span></li><li class="category-list-item"><a class="category-list-link" href="/categories/Diary/">Diary</a><span class="category-list-count">2</span></li><li class="category-list-item"><a class="category-list-link" href="/categories/Frontend/">Frontend</a><span class="category-list-count">3</span></li><li class="category-list-item"><a class="category-list-link" href="/categories/Functional-Programming/">Functional Programming</a><span class="category-list-count">2</span></li><li class="category-list-item"><a class="category-list-link" href="/categories/Mathematic/">Mathematic</a><span class="category-list-count">1</span></li><li class="category-list-item"><a class="category-list-link" href="/categories/Programming-Language/">Programming Language</a><span class="category-list-count">1</span></li><li class="category-list-item"><a class="category-list-link" href="/categories/Security/">Security</a><span class="category-list-count">1</span></li><li class="category-list-item"><a class="category-list-link" href="/categories/System/">System</a><span class="category-list-count">3</span></li><li class="category-list-item"><a class="category-list-link" href="/categories/%E6%B0%B8%E8%BF%9C%E8%AE%B0%E4%B8%8D%E4%BD%8F%E7%9A%84%E7%BC%96%E7%A8%8B%E5%A7%BF%E5%8A%BF/">永远记不住的编程姿势</a><span class="category-list-count">2</span></li></ul>
    </div>
</aside>

    
    
<aside class="widget">
    <h3 class="widget-title">标签</h3>
    <div class="widget-content tag-cloud">
        <a href="/tags/CSS/" style="font-size: 15px;">CSS</a> <a href="/tags/Database/" style="font-size: 20px;">Database</a> <a href="/tags/Distributed-System/" style="font-size: 15px;">Distributed System</a> <a href="/tags/Hibernate/" style="font-size: 10px;">Hibernate</a> <a href="/tags/JPA/" style="font-size: 20px;">JPA</a> <a href="/tags/Jackson/" style="font-size: 10px;">Jackson</a> <a href="/tags/Java/" style="font-size: 10px;">Java</a> <a href="/tags/Javascript/" style="font-size: 10px;">Javascript</a> <a href="/tags/Kotlin/" style="font-size: 10px;">Kotlin</a> <a href="/tags/Lambda-Calculus/" style="font-size: 15px;">Lambda Calculus</a> <a href="/tags/Linux/" style="font-size: 20px;">Linux</a> <a href="/tags/SQL/" style="font-size: 10px;">SQL</a> <a href="/tags/Sort/" style="font-size: 20px;">Sort</a> <a href="/tags/Spring/" style="font-size: 20px;">Spring</a> <a href="/tags/UNIX/" style="font-size: 10px;">UNIX</a> <a href="/tags/%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/" style="font-size: 15px;">编程技巧</a>
    </div>
</aside>

    
    
<aside class="widget">
    <h3 class="widget-title">归档</h3>
    <div class="widget-content">
        <ul class="archive-list"><li class="archive-list-item"><a class="archive-list-link" href="/archives/2024/06/">June 2024</a><span class="archive-list-count">2</span></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/10/">October 2019</a><span class="archive-list-count">1</span></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/05/">May 2019</a><span class="archive-list-count">2</span></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/03/">March 2019</a><span class="archive-list-count">2</span></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/02/">February 2019</a><span class="archive-list-count">2</span></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2019/01/">January 2019</a><span class="archive-list-count">1</span></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2017/07/">July 2017</a><span class="archive-list-count">1</span></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2017/06/">June 2017</a><span class="archive-list-count">1</span></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2017/03/">March 2017</a><span class="archive-list-count">3</span></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2017/02/">February 2017</a><span class="archive-list-count">1</span></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2017/01/">January 2017</a><span class="archive-list-count">2</span></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2016/12/">December 2016</a><span class="archive-list-count">1</span></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2016/09/">September 2016</a><span class="archive-list-count">1</span></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2016/06/">June 2016</a><span class="archive-list-count">1</span></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2016/05/">May 2016</a><span class="archive-list-count">5</span></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2016/04/">April 2016</a><span class="archive-list-count">3</span></li></ul>
    </div>
</aside>

    
</aside>
            </div>
        </div>
    </div>
    
    <footer id="footer">
    <div id="footer-info">
        &copy; 
        
        
            2015 - 
        
        <span itemprop="copyrightYear">2024</span>
        noob9527<br>
        Powered by <a href="/about">xy</a>
        .
        Theme Noob by <a href="/about">xy</a>
    </div>
</footer>

    
    

    

    
          <script type="text/javascript">
              var disqus_config = function () {
                  this.page.url = 'https://blog.staynoob.cn/regular-expression-lookahead-lookbehind';
                  this.page.identifier = '/regular-expression-lookahead-lookbehind';
                  this.page.title = '正则表达式：零宽断言(lookaround)';
              };
              var d = document, s = d.createElement('script');
              s.src = 'https://staynoob.disqus.com/embed.js';
              s.setAttribute('data-timestamp', '' + +new Date());
              (d.head || d.body).appendChild(s);
          </script>
    

    
  <script type="text/javascript">
    var _hmt = _hmt || [];
    (function() {
      var hm = document.createElement("script");
      hm.src = "//hm.baidu.com/hm.js?855dd1a156248c0c337788236167c870";
      var s = document.getElementsByTagName("script")[0];
      s.parentNode.insertBefore(hm, s);
    })();
  </script>


<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
            (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
          m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-76868752-1', 'auto');
  ga('send', 'pageview');
</script>


  <script type="text/javascript">
    (function() {
      var hm = document.createElement("script");
      hm.src = "//tajs.qq.com/stats?sId=55612284";
      var s = document.getElementsByTagName("script")[0];
      s.parentNode.insertBefore(hm, s);
    })();
  </script>


    
<script>
    (function(){
        var bp = document.createElement('script');
        var curProtocol = window.location.protocol.split(':')[0];
        if (curProtocol === 'https') {
            bp.src = 'https://zz.bdstatic.com/linksubmit/push.js';
        }
        else {
            bp.src = 'http://push.zhanzhang.baidu.com/push.js';
        }
        var s = document.getElementsByTagName("script")[0];
        s.parentNode.insertBefore(bp, s);
    })();
</script>

    
  <!-- <script type="text/x-mathjax-config">
    MathJax.Hub.Config({
      tex2jax: {
        inlineMath: [ ['$','$'], ["\\(","\\)"]  ],
        processEscapes: true,
        skipTags: ['script', 'noscript', 'style', 'textarea', 'pre', 'code']
      }
    });
  </script>
  <script type="text/x-mathjax-config">
    MathJax.Hub.Queue(function() {
      var all = MathJax.Hub.getAllJax(), i;
      for (i=0; i < all.length; i += 1) {
        all[i].SourceElement().parentNode.className += ' has-jax';
      }
    });
  </script>
  <script type="text/javascript" src="//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script> -->
  <!-- upgrade to mathjax 3 -->
  <!-- see https://www.mathjax.org/#gettingstarted -->
  <script>
  MathJax = {
    tex: {
      inlineMath: [['$', '$'], ['\\(', '\\)']]
    }
  };
  </script>
  <script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
  <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>

</body>
</html>
